1. What tables do you need to add? Decide on table names and their associations to each other and any existing tables/models.

Topics Table.
    This table will store the names of the topics.
    A topic can have many lessons, and a lesson can have many topics, which creates a many-to-many relationship between the two.

Lesson_Topics Join Table.
    This table will handle the many-to-many relationship between lessons and topics.
    A topic can be associated with multiple lessons, and each lesson can have multiple topics.

2. What columns are necessary for the associations you decided on?

Topics will have a column title to store names of the topics, and autogenerated columns: id, created_at, and updated_at.

Lesson_Topics Join Table will have lesson_id to reference the lessons table to associate a lesson with a topic, topic_id to reference the topics table to associate a topic with a lesson, and autogenerated id, created_at, and updated_at.

3. What other columns (if any) need to be included on the tables? What other data needs to be stored?

Based on the provided feature request, no additional columns are necessary.

4. Write out each table's name and column names with data types. 

topics table
Columns:    id: integer (primary key)
            title: string (topic name)
            created_at: timestamp
            updated_at: timestamp

lesson_topics ioin table
Columns:    id: integer (primary key)
            lesson_id: integer (foreign key referencing lessons table)
            topic_id: integer (foreign key referencing topics table)
            created_at: timestamp
            updated_at: timestamp

5. Determine the generator command you'll need to create the migration file and run the command to generate the empty migration file. Start with just the topics migration. (Hint: your filename should be create_topics)

rails generate migration create_topics